// Generated by CoffeeScript 1.4.0
var convert, convertCustom, convertHex, convertKeyword, convertMini, convertXterm, custom, degrade, encode, keywords, miniColors, prefix, reset, suffix, _ref;

_ref = require('./codes'), prefix = _ref.prefix, suffix = _ref.suffix, reset = _ref.reset, keywords = _ref.keywords, miniColors = _ref.miniColors, degrade = _ref.degrade;

custom = {};

convert = function(input, styles) {
  var base;
  if (styles == null) {
    styles = {};
  }
  if (!input) {
    return '';
  }
  custom = styles;
  if (input.match(/^bg /)) {
    base = 10;
    input = input.slice(3);
  }
  if (parseInt(input)) {
    return convertXterm(input, base);
  } else if (input[0] === '.' || input[1] === '.') {
    return convertCustom(input);
  } else if (input[0] === '#') {
    return convertHex(input, base);
  } else if (input[0] === '&') {
    return convertMini(input);
  } else {
    return convertKeyword(input, base);
  }
};

convertXterm = function(input, base) {
  var num;
  if (base == null) {
    base = 0;
  }
  num = parseInt(input);
  if (!((256 > num && num > 0))) {
    return '';
  }
  if (process.env.TERM && process.env.TERM === 'xterm-256color') {
    return encode("" + (38 + base) + ";5;" + num);
  } else {
    return convertKeyword(miniColors[degrade[num]], base);
  }
};

convertKeyword = function(input, base) {
  var escape, isReset, keyword;
  if (base == null) {
    base = 0;
  }
  if (input.charAt(0) === '/') {
    isReset = true;
    input = input.slice(1);
  }
  if (!(keyword = keywords[input.toLowerCase()])) {
    return '';
  }
  if (keyword.hex != null) {
    return convertHex(keyword.hex, base);
  } else {
    escape = isReset ? keyword.reset : keyword.init;
    return encode(escape + base);
  }
};

convertHex = function(hex, base) {
  var b, blue, g, green, r, red, rgb;
  if (base == null) {
    base = 0;
  }
  hex = hex.substring(1);
  red = hex.substring(0, 2);
  green = hex.substring(2, 4);
  blue = hex.substring(4, 6);
  r = Math.round(parseInt(red, 16) / 255 * 5);
  g = Math.round(parseInt(green, 16) / 255 * 5);
  b = Math.round(parseInt(blue, 16) / 255 * 5);
  rgb = 16 + (r * 36) + (g * 6) + b;
  return convertXterm(rgb, base);
};

convertMini = function(input) {
  var bg, fg;
  if (input.length < 3) {
    return '';
  }
  switch (input[1]) {
    case '+':
      if (!((miniColors[input[2]] != null) && keywords[miniColors[input[2]]])) {
        return '';
      }
      return encode(keywords[miniColors[input[2]]].init);
    case '=':
      if (!((miniColors[input[2]] != null) && keywords[miniColors[input[2]]])) {
        return '';
      }
      if (!((miniColors[input[3]] != null) && keywords[miniColors[input[3]]])) {
        return '';
      }
      bg = encode(keywords[miniColors[input[2]]].init + 10);
      fg = encode(keywords[miniColors[input[3]]].init);
      return bg + fg;
    case 'n':
    case 'N':
      return reset;
    default:
      return '';
  }
};

convertCustom = function(input) {
  var i, output, style, _i, _len;
  output = '';
  input = input.substring(1);
  if (style = custom[input]) {
    if (!Array.isArray(style)) {
      style = [style];
    }
    for (_i = 0, _len = style.length; _i < _len; _i++) {
      i = style[_i];
      output += convert(i);
    }
  }
  return output;
};

encode = function(escape) {
  return "" + prefix + escape + suffix;
};

module.exports = convert;
