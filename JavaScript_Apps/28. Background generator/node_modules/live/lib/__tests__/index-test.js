'use strict';

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

global.__CLIENT__ = false;

var _require = require('..'),
    Live = _require.Live;

describe('Live', function () {

  beforeEach(function () {
    var _this = this;

    this.beforeCb = sinon.spy();
    this.afterCb = sinon.spy();
    var self = this;
    this.fooModule = {
      $name: 'foo',
      register: function register(live) {
        live.before('start', (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
          return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  self.beforeCb();

                case 1:
                case 'end':
                  return _context.stop();
              }
            }
          }, _callee, _this);
        })));
        live.after('start', (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {
          return _regenerator2.default.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  self.afterCb();

                case 1:
                case 'end':
                  return _context2.stop();
              }
            }
          }, _callee2, _this);
        })));
      }
    };
  });

  it('simple register', function (done) {
    var self = this;
    var live = new Live();
    this.fooModule.register(live);
    live.start().then(function () {
      self.beforeCb.should.have.been.calledBefore(self.afterCb);
      done();
    });
  });

  it('register', function (done) {
    var self = this;
    var live = new Live();
    live.register(this.fooModule);
    live.start().then(function () {
      self.beforeCb.should.have.been.calledBefore(self.afterCb);
      done();
    });
  }

  //it('use global live instance', function() {
  //  const self = this
  //  const {Live} = require('..')
  //  live.register(this.fooModule)
  //  live.start().then(function() {
  //    self.beforeCb.should.have.been.calledBefore(self.afterCb)
  //    done()
  //  })
  //})

  );
});
//# sourceMappingURL=index-test.js.map
