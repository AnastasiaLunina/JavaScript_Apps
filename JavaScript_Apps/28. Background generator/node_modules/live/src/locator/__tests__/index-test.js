const mock = require('mock-fs')
const locator = require('..')
const fs = require('fs')

describe('Locator', function() {

  beforeEach(function() {

    // For `babel/register`, and webpack.
    const liverc = {
      globals: {},
      moduleDirectories: ['modules'],
    }

    const livercStr = 'module.exports = ' + JSON.stringify(liverc)

    function makeApp() {
      return {
        'package.json': 'TODO',
        '.liverc': livercStr,
        'modules': {
          foo: {
            'live.js': 'module.exports = function(live) { return "foo" }',
          },
          bar: {
            'live.js': 'module.exports = function(live) { return "bar" }',
          },
        },
      }
    }

    // Create test dir structure.
    const testDir = {}
    testDir['/parentApp'] = makeApp()
    testDir['/parentApp/modules/childApp'] = makeApp()
    mock(testDir)
  })

  it('should work', () => {
    //console.log(process.cwd())
    //console.log(fs.readdirSync('/'))
    const actual = locator({rootDir: '/parentApp'})
    const expected = ['/parentApp/modules/bar/live.js', '/parentApp/modules/foo/live.js']
    expect(actual).to.eql(expected)
  })

  afterEach(() => {
    mock.restore()
  })

})
