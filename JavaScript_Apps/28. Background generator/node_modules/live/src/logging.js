import {log, warn, debug} from 'zog'
const {ColorCode} = require('color-cod')
import c from 'chalk'
import s from 'string'
import {makeIDELink} from 'live-caller'

const colorCod = new ColorCode

export default function(container) {

  container.vent.on('register-plugin', ({moduleName, relPath}) => {
    log(`Registering plugin ${c.bold(moduleName)} ${c.gray(relPath)}`)
  })

  container.vent.on('start-perform', (name, {source, callInfo, stage}) => {
    //log(`Start Peform ${name}`)
  })

  container.vent.on('run-event', (name, {source, callInfo, stage}) => {
    if (source) {
      const event = container.events[name]
      const info = event.callInfo
      const link = c.gray(makeIDELink(info))
      const color = colorCod.getColor(source)
      const prettyEvent = c[color](`${stage}:${source}`)
      log(`Callback ${prettyEvent} called by ${c.bold(event.moduleName)}`)
      log('  ' + link)
      // TODO: Show description?
    } else {
      //const link = makeIDELink(callInfo).gray
      const link = ''
      log(`Performing event '${name}' ${link}`)
    }
  })

  container.vent.on('add-callback', (name, callback) => {
    log(`  Subscribing to ${c.blue(name)}`)
    //log('  Subscribe to', chalk.bold(name), `(${callback.moduleName})`)
  })

  container.vent.on('invalid-module', (text) => {
    warn('Invalid Live module defined in:', text)
  })

}
