'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _eventKit = require('event-kit');

var _semver = require('semver');

var _semver2 = _interopRequireDefault(_semver);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _zog = require('zog');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Provider = function () {
  function Provider(keyPath, servicesByVersion) {
    (0, _classCallCheck3.default)(this, Provider);

    this.isDestroyed = false;
    this.consumersDisposable = new _eventKit.CompositeDisposable();
    this.servicesByVersion = {};
    for (var version in servicesByVersion) {
      var service = servicesByVersion[version];
      this.servicesByVersion[version] = {};
      _lodash2.default.set(this.servicesByVersion[version], keyPath, service);
    }
  }

  (0, _createClass3.default)(Provider, [{
    key: 'provide',
    value: function provide(consumer) {
      var iterable = (0, _keys2.default)(this.servicesByVersion).sort(_semver2.default.rcompare);
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = (0, _getIterator3.default)(iterable), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var version = _step.value;

          if (_semver2.default.satisfies(version, consumer.versionRange)) {
            var value = void 0;
            if (value = _lodash2.default.get(this.servicesByVersion[version], consumer.keyPath)) {
              (0, _zog.debug)('Consuming service', consumer.keyPath, version);
              var consumerDisposable = consumer.callback.call(null, value);
              if (consumerDisposable && _lodash2.default.isFunction(consumerDisposable.dispose)) {
                this.consumersDisposable.add(consumerDisposable);
              }
              return;
            }
          }
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: 'destroy',
    value: function destroy() {
      this.isDestroyed = true;
      return this.consumersDisposable.dispose();
    }
  }]);
  return Provider;
}();

exports.default = Provider;
module.exports = exports['default'];
//# sourceMappingURL=provider.js.map
